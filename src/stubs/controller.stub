<?php
/**
 * Controller generated using LaraAdmin
 

 */

namespace App\Http\Controllers\LA;

use App\Http\Controllers\Controller;
use App\Http\Controllers\LA\AuditoriasController;
use Illuminate\Http\Request;
use App\Http\Requests;
use Auth;
use DB;
use Validator;
use Yajra\DataTables\Facades\DataTables;
use Collective\Html\FormFacade as Form;
use Dwij\Laraadmin\Models\Module;
use Dwij\Laraadmin\Models\ModuleFields;
use Dwij\Laraadmin\Helpers\LAHelper;
use App\Models\Comentario;
use Illuminate\Support\Str;

use App\Models\__model_name__;

class __controller_class_name__ extends Controller
{
    public $show_action = true;
    
    /**
     * Display a listing of the __module_name__.
     *
     * @return mixed
     */
    public function index()
    {
        $module = Module::get('__module_name__');
        
        if(Module::hasAccess($module->id)) {
            return View('la.__view_folder__.index', [
                'show_actions' => $this->show_action,
                'listing_cols' => Module::getListingColumns('__module_name__'),
                'module' => $module
            ]);
        } else {
            return redirect(config('laraadmin.adminRoute') . "/");
        }
    }
    
    /**
     * Show the form for creating a new __singular_var__.
     *
     * @return mixed
     */
    public function create()
    {
        //
    }
    
    /**
     * Store a newly created __singular_var__ in database.
     *
     * @param \Illuminate\Http\Request $request
     * @return \Illuminate\Http\RedirectResponse
     */
    public function store(Request $request)
    {
        if(Module::hasAccess("__module_name__", "create")) {
            
            $rules = Module::validateRules("__module_name__", $request);
            
            $validator = Validator::make($request->all(), $rules);
            
            if($validator->fails()) {
                return redirect()->back()->withErrors($validator)->withInput();
            }
            
            $insert_id = Module::insert("__module_name__", $request);
            
            // Registrar na auditoria Store
            // Adiciona o Id de acordo com o último registro
            $novoId = __model_name__::latest()->value('id');
            app('App\Http\Controllers\LA\AuditoriasController')->registrar("__module_name__", __FUNCTION__, $novoId, $request);

            // REDIRECIONAMENTO ANTERIOR
            //return redirect()->route(config('laraadmin.adminRoute') . '.__route_resource__.index')->with('confirmacao', 'Registro inserido com sucesso!');
            
            return redirect(config('laraadmin.adminRoute') . "/__route_resource__/" . $insert_id)->with('confirmacao', 'Registro inserido com sucesso!');

        } else {
            return redirect(config('laraadmin.adminRoute') . "/");
        }
    }
    
    /**
     * Display the specified __singular_var__.
     *
     * @param int $id __singular_var__ ID
     * @return mixed
     */
    public function show($id)
    {
        if(Module::hasAccess("__module_name__", "view")) {
            
            $__singular_var__ = __model_name__::find($id);
            if(isset($__singular_var__->id)) {
                $module = Module::get('__module_name__');
                $module->row = $__singular_var__;
                $comentarios = Comentario::select('*', 'employees.name as func', 'comentarios.created_at as dt_comentario')
                        ->leftjoin('employees', 'comentarios.comment_user', '=', 'employees.id')
                        ->where('registro', '=', $id)
                        ->where('modulo', '=', '__module_name__')
                        ->whereNull('comentarios.deleted_at')
                        ->get();
                
                return view('la.__view_folder__.show', [
                    'module' => $module,
                    'view_col' => $module->view_col,
                    'id_registro' => $id,
                    'comentarios' => $comentarios,
                    'no_header' => true,
                    'no_padding' => "no-padding"
                ])->with('__singular_var__', $__singular_var__);
            } else {
                return view('errors.404', [
                    'record_id' => $id,
                    'record_name' => ucfirst("__singular_var__"),
                ]);
            }
        } else {
            return redirect(config('laraadmin.adminRoute') . "/");
        }
    }
    
    /**
     * Show the form for editing the specified __singular_var__.
     *
     * @param int $id __singular_var__ ID
     * @return \Illuminate\Http\RedirectResponse
     */
    public function edit($id)
    {
        if(Module::hasAccess("__module_name__", "edit")) {
            $__singular_var__ = __model_name__::find($id);
            if(isset($__singular_var__->id)) {
                $module = Module::get('__module_name__');
                
                $module->row = $__singular_var__;
                
                return view('la.__view_folder__.edit', [
                    'module' => $module,
                    'view_col' => $module->view_col,
                ])->with('__singular_var__', $__singular_var__);
            } else {
                return view('errors.404', [
                    'record_id' => $id,
                    'record_name' => ucfirst("__singular_var__"),
                ]);
            }
        } else {
            return redirect(config('laraadmin.adminRoute') . "/");
        }
    }
    
    /**
     * Update the specified __singular_var__ in storage.
     *
     * @param \Illuminate\Http\Request $request
     * @param int $id __singular_var__ ID
     * @return \Illuminate\Http\RedirectResponse
     */
    public function update(Request $request, $id)
    {
        if(Module::hasAccess("__module_name__", "edit")) {
            
            $rules = Module::validateRules("__module_name__", $request, true);
            
            $validator = Validator::make($request->all(), $rules);
            
            if($validator->fails()) {
                return redirect()->back()->withErrors($validator)->withInput();
            }
            
            $insert_id = Module::updateRow("__module_name__", $request, $id);
            
            // Registrar na auditoria Update
            app('App\Http\Controllers\LA\AuditoriasController')->registrar("__module_name__", __FUNCTION__, $id, $request);

            // REDIRECIONAMENTO ANTERIOR
            // return redirect()->route(config('laraadmin.adminRoute') . '.__route_resource__.index')->with('confirmacao', 'Registro atualizado com sucesso!');
            
            return redirect("admin/__route_resource__/" . $id)->with('confirmacao', 'Registro atualizado com sucesso!');

        } else {
            return redirect(config('laraadmin.adminRoute') . "/");
        }
    }
    
    /**
     * Remove the specified __singular_var__ from storage.
     *
     * @param int $id __singular_var__ ID
     * @return \Illuminate\Http\RedirectResponse
     */
    public function destroy($id, Request $request)
    {
        if(Module::hasAccess("__module_name__", "delete")) {

            // Registrar na auditoria Destroy
            app('App\Http\Controllers\LA\AuditoriasController')->registrar("__module_name__", __FUNCTION__, $id, $request);

            __model_name__::find($id)->delete();
            
            // Redirecting to index() method
            return redirect()->route(config('laraadmin.adminRoute') . '.__route_resource__.index')->with('confirmacao', 'Registro apagado com sucesso!');
        } else {
            return redirect(config('laraadmin.adminRoute') . "/");
        }
    }
    
    /**
     * Server side Datatable fetch via Ajax
     *
     * @param \Illuminate\Http\Request $request
     * @return \Illuminate\Http\Response
     */
    public function dtajax(Request $request)
    {
        $module = Module::get('__module_name__');
        $listing_cols = Module::getListingColumns('__module_name__');
        
        $values = DB::table('__db_table_name__')->select($listing_cols)->whereNull('deleted_at');
        $out = Datatables::of($values)->make();
        $data = $out->getData();
        
        $fields_popup = ModuleFields::getModuleFields('__module_name__');
        
        for($i = 0; $i < count($data->data); $i++) {
            for($j = 0; $j < count($listing_cols); $j++) {
                $col = $listing_cols[$j];
                if($fields_popup[$col] != null && Str::startsWith($fields_popup[$col]->popup_vals, "@")) {
                    $data->data[$i]->$col = ModuleFields::getFieldValue($fields_popup[$col], $data->data[$i]->$col);
                } elseif ($fields_popup[$col] != null && Str::startsWith($fields_popup[$col]->popup_vals, "[")) {
					$data->data[$i]->$col = LAHelper::parseValues($data->data[$i]->$col);
				} elseif ($fields_popup[$col] != null && $fields_popup[$col]->field_type == 3 && $data->data[$i]->$col) {
					if ($data->data[$i]->$col == 0) {
						$data->data[$i]->$col = '';
					} else {
						$data->data[$i]->$col = 'R$ ' . number_format($data->data[$i]->$col, 2, ',', '.');
					}
                }
                if($col == $module->view_col) {
                    $data->data[$i]->$col = '<a href="' . url(config('laraadmin.adminRoute') . '/__route_resource__/' . $data->data[$i]->id) . '">' . $data->data[$i]->$col . '</a>';
                }
                // else if($col == "author") {
                //    $data->data[$i]->$col;
                // }
            }
            
            if($this->show_action) {
                $output = '<div class="btn-group">

                            <button type="button" class="btn btn-default dropdown-toggle dropdown-icon" data-toggle="dropdown" aria-expanded="false">
                            <span class="sr-only">Ações</span>
                            </button>
                            <div class="dropdown-menu" role="menu" style="">';

                if(Module::hasAccess("__module_name__", "edit")) {
                    $output .= '<a href="' . url(config('laraadmin.adminRoute') . '/__route_resource__/' . $data->data[$i]->id . '/edit') . '" class="dropdown-item text-warning" data-toggle="tooltip" data-placement="top" title="Editar"><i class="fa fa-edit"></i> Editar</a>';
                }
                
                if(Module::hasAccess("__module_name__", "delete")) {
                    $output .= Form::open(['route' => [config('laraadmin.adminRoute') . '.__route_resource__.destroy', $data->data[$i]->id], 'method' => 'delete', 'style' => 'display:inline', 'onsubmit' => 'return confirm("Deseja apagar o registro?");']);
                    $output .= ' <button class="dropdown-item text-danger" type="submit" data-toggle="tooltip" data-placement="top" title="Apagar"><i class="fa fa-times"></i> Excluir</button>';
                    $output .= Form::close();
                }
                $output .= '</div></div>';
                $data->data[$i]->actions = (string)$output;
            }
        }
        $out->setData($data);
        return $out;
    }
}
